{"version":3,"sources":["store/actions/types.js","store/reducers/alert.js","store/reducers/auth.js","store/reducers/profile.js","store/reducers/post.js","components/routing/PrivateRoute.js","components/layout/Navbar.js","components/layout/Lander.js","components/UIElements/Spinner.js","store/actions/alert.js","utility/setAuthToken.js","store/actions/auth.js","store/actions/profile.js","store/actions/post.js","utility/formatDate.js","components/dashboard/ListExperience.js","components/dashboard/ListEducation.js","components/dashboard/Dashboard.js","utility/checkValidity.js","components/UIElements/Input.js","components/auth/Login.js","components/auth/Register.js","components/Developers/ProfileItem.js","components/Developers/Developers.js","components/posts/Post.js","components/posts/Posts.js","components/posts/DiscussionForm.js","components/posts/PostDiscussion.js","components/auth/Logout.js","hooks/useForm.js","components/dashboard/profiles/CreateProfile.js","components/dashboard/profiles/EditProfile.js","components/dashboard/profiles/AddExperience.js","components/dashboard/profiles/AddEducation.js","components/Developers/DetailedProfile/ProfileTop.js","components/Developers/DetailedProfile/ProfileAbout.js","components/Developers/DetailedProfile/ProfileExperience.js","components/Developers/DetailedProfile/ProfileEducation.js","components/Developers/DetailedProfile/ProfileRepos.js","components/Developers/DetailedProfile/DetailedProfile.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","AUTH_START","AUTH_SUCCESS","AUTH_FAILURE","AUTH_INVALID_TOKEN","LOAD_USER_SUCCESS","LOGOUT","FETCH_PROFILE_START","LOAD_CURRENT_PROFILE_SUCCESS","PROFILE_ERROR","CLEAR_PROFILE","LOAD_ALL_PROFILES_SUCCESS","LOAD_REPOS","LOAD_POSTS_START","LOAD_POSTS","LOAD_POST","POSTS_ERROR","UPDATE_LIKES","UPDATE_COMMENTS","initialState","msg","type","reducer","state","action","actionTypes","alertType","isAuth","loading","user","profile","profiles","repos","actiontypes","posts","post","error","map","_id","id","likes","comments","connect","auth","Component","component","rest","render","props","to","navLinks","className","Spinner","setAlert","dispatch","setTimeout","setAuthToken","token","axios","defaults","headers","common","delete","authStart","authSuccess","authFailure","loadUser","a","localStorage","getItem","get","res","data","response","console","log","logout","removeItem","clearProfile","fetchProfileStart","loadCurrentProfileSuccess","profileError","currentProfile","createProfile","formData","history","edit","config","JSON","stringify","status","push","errors","forEach","getGithubRepos","username","postsStart","postsError","updateLikes","updateComments","loadPosts","formatDate","date","Intl","DateTimeFormat","format","Date","deleteExperience","expId","deleteExperienceHandler","experiences","experience","exp","company","title","from","onClick","bind","style","marginTop","marginBottom","deleteEducation","eduId","deleteEducationHandler","educations","education","edu","school","degree","alertMsg","alert","LOAD_CURRENT_USER","DELETE_ACCOUNT","deleteAccount","withRouter","useEffect","alertClasses","dashboard","name","join","checkValidity","value","rules","isValid","required","trim","minLength","length","isEmail","test","Input","inputElement","invalid","elementType","elementConfig","touched","changed","info","icon","checked","cssClasses","onChange","fontWeight","placeholder","option1","options","option","displayValue","mainDivCss","LOGIN","email","password","setItem","login","useState","validation","valid","setFormData","isFormValid","setIsFormValid","onChangeHandler","identifier","updatedFormData","updatedFormDataDeep","event","target","CheckValidity","key","loginFormArray","i","formElement","loginButtonClasses","form","onSubmit","disabled","alertCssClass","ALERT","AUTH","password2","registerFormArray","registerButtonClasses","preventDefault","border","src","avatar","alt","location","skills","skill","getProfiles","content","userId","addLike","put","deletePost","removeLike","showActions","postClasses","lightBg","color","cursor","text","e","addPost","setText","fontSize","width","padding","rows","addComment","postId","loadPost","message","deleteComment","commentId","match","params","comment","goBack","useForm","fields","shift","toLowerCase","split","field","checkbox","fieldPush","formArray","copiedForm","index","findIndex","CreateProfileButtonClasses","userFormData","userInputIdentifier","profileItem","social","ADD_EXPERIENCE","addExperience","element","splice","AddExperienceButtonClasses","ADD_EDUCATION","addEducation","addEducationButtonClasses","ProfileTop","socialLinksArray","url","displaySocialLinks","href","website","ProfileAbout","bio","paddingLeft","ProfileExperience","current","description","ProfileEducation","fieldOfStudy","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileBUserId","editProfileButton","githubUsername","LOAD_USER","routes","path","exact","Register","Login","Developers","DetailedProfile","Logout","Posts","PostDiscussion","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Lander","rootReducer","combineReducers","AlertReducer","AuthReducer","ProfileReducer","PostReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25abe18f.chunk.js","sourcesContent":["// alerts\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\n\r\n//authentication login/signup\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAILURE = 'AUTH_FAILURE'\r\n\r\n//load user with auth token\r\nexport const AUTH_INVALID_TOKEN = 'AUTH_INVALID_TOKEN'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\n\r\n//logout\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\n//Profiles\r\nexport const FETCH_PROFILE_START = 'FETCH_PROFILE_START'\r\nexport const LOAD_CURRENT_PROFILE_SUCCESS = 'LOAD_CURRENT_PROFILE_SUCCESS'\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR'\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE'\r\nexport const LOAD_ALL_PROFILES_SUCCESS = 'LOAD_ALL_PROFILES_SUCCESS'\r\n\r\n//Repositories\r\nexport const LOAD_REPOS = 'LOAD_REPOS'\r\n\r\n//delete profile / posts\r\n// export const DELETE_ACCOUNT = 'DELETE_ACCOUNT'\r\n\r\n//Posts\r\nexport const LOAD_POSTS_START = 'LOAD_POSTS_START'\r\nexport const LOAD_POSTS = 'LOAD_POSTS'\r\nexport const LOAD_POST = 'LOAD_POST'\r\nexport const POSTS_ERROR = 'POSTS_ERROR'\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES'\r\nexport const UPDATE_COMMENTS = 'UPDATE_COMMENTS'","import * as actionTypes from '../actions/types'\r\n\r\nconst initialState = {\r\n    msg: null,\r\n    type: null\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.SET_ALERT: return {...state, msg: action.msg, type: action.alertType}\r\n        case actionTypes.REMOVE_ALERT: return {...state, msg: null, type: null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/types'\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    loading: false,\r\n    user: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return { ...state, loading: true, isAuth: false, user: null }\r\n\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return { ...state, loading: false, isAuth: true }\r\n\r\n        case actionTypes.LOAD_USER_SUCCESS:\r\n            return { ...state, user: action.user, isAuth: true }\r\n\r\n        case actionTypes.LOGOUT:\r\n            return {...state, isAuth: false, user: null}\r\n\r\n        case actionTypes.AUTH_FAILURE:\r\n        case actionTypes.AUTH_INVALID_TOKEN:\r\n            return { ...state, loading: false }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actiontypes from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    loading: false,\r\n    repos: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actiontypes.FETCH_PROFILE_START:\r\n            return { ...state, loading: true, repos: [] }\r\n        case actiontypes.LOAD_CURRENT_PROFILE_SUCCESS:\r\n            return { ...state, loading: false, profile: action.profile }\r\n        case actiontypes.LOAD_ALL_PROFILES_SUCCESS:\r\n            return { ...state, loading: false, profiles: action.profiles }\r\n        case actiontypes.CLEAR_PROFILE:\r\n            return { ...state, profile: null, repos: [] }\r\n        case actiontypes.PROFILE_ERROR:\r\n            return { ...state, loading: false, repos: [] }\r\n        case actiontypes.LOAD_REPOS:\r\n            return { ...state, loading: false, repos: action.repos }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/types'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    posts: [],\r\n    post: null,\r\n    error: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_POSTS_START: return { ...state, loading: true, posts: [], error: null }\r\n        case actionTypes.LOAD_POSTS: return { ...state, loading: false, posts: action.posts }\r\n        case actionTypes.LOAD_POST: return { ...state, loading: false, post: action.post }\r\n        case actionTypes.UPDATE_LIKES: return { ...state, loading: false, posts: state.posts.map((post) =>\r\n            post._id === action.id ? { ...post, likes: action.likes } : post\r\n          ), }\r\n        case actionTypes.UPDATE_COMMENTS: return { ...state, loading: false, post: { ...state.post, comments: action.comments }}\r\n        case actionTypes.POSTS_ERROR: return { ...state, loading: false, error: action.error }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import { Redirect, Route } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nconst PrivateRoute = ({ component: Component, isAuth, ...rest }) => (\r\n    <Route {...rest} render={props => isAuth ? (<Component {...props} />) : (<Redirect to='/login' />)} />\r\n)\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)","import { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './Navbar.css'\r\n\r\nconst Navbar = props => {\r\n\r\n    let navLinks = (\r\n        <ul>\r\n            <li><Link to=\"/developers\">Developers</Link></li>\r\n            <li><Link to=\"/register\">Register</Link></li>\r\n            <li><Link to=\"/login\">Login</Link></li>\r\n        </ul>\r\n    )\r\n\r\n    if (props.isAuth) {\r\n        navLinks = (\r\n            <ul>\r\n                <li><Link to=\"/posts\"><i className=\"fas fa-sticky-note\"></i>{' '}<span className=\"hide-sm\">Posts</span></Link></li>\r\n                <li><Link to=\"/developers\"><i className=\"fab fa-dev\"></i>{' '}<span className=\"hide-sm\">Developers</span></Link></li>\r\n                <li><Link to=\"/dashboard\"><i className=\"fas fa-user\"></i>{' '}<span className=\"hide-sm\">Dashboard</span></Link></li>\r\n                <li><Link to=\"/logout\"><i className=\"fas fa-sign-out-alt\"></i>{' '}<span className=\"hide-sm\">Logout</span></Link></li>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return <Fragment>\r\n        <nav className='navbar'>\r\n            <h1>\r\n                <Link to='/'><i className=\"fas fa-code\"></i>{' '}<span className=\"hide-sm\">DevConnector</span></Link>\r\n            </h1>\r\n            {navLinks}\r\n        </nav>\r\n    </Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nimport './Lander.css'\r\n\r\nconst Lander = props => {\r\n\r\n    if (props.isAuth) {return <Redirect to='/dashboard' />}\r\n\r\n    return <section className='landing'>\r\n        <div className='landingOverlay'>\r\n            <div className='landingInner'>\r\n                <h1 className='x-large'>DevConnector</h1>\r\n                <p className='large'>Create a developer profile/portfolio, share posts and get help from other developers</p>\r\n                <div className='buttons'>\r\n                    <Link to='/register' className='btn btn-primary'>Signup</Link>\r\n                    <Link to='/login' className='btn btn-light'>Login</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Lander)","import './Spinner.css'\r\n\r\nconst Spinner = () => <div className=\"loader\">...</div>\r\n\r\nexport default Spinner","import * as actionTypes from './types'\r\n\r\nconst removeAlert = () => {\r\n    return {\r\n        type: actionTypes.REMOVE_ALERT\r\n    }\r\n}\r\n\r\nexport const setAlert = (type, msg) => dispatch => {\r\n    dispatch({\r\n        type: actionTypes.SET_ALERT,\r\n        msg: msg,\r\n        alertType: type\r\n    })\r\n    setTimeout(() => { dispatch(removeAlert()) }, 4000)\r\n}","import axios from 'axios'\r\n\r\nexport const setAuthToken = token => \r\n    token ? axios.defaults.headers.common['x-auth-token'] = token : axios.defaults.headers.delete['x-auth-token']\r\n\r\n","import axios from 'axios'\r\n\r\nimport * as actionTypes from './types'\r\nimport { setAlert, clearProfile } from './index'\r\nimport { setAuthToken } from '../../utility/setAuthToken'\r\n\r\n\r\n//for login/signup\r\nconst authStart = () => { return { type: actionTypes.AUTH_START } }\r\nconst authSuccess = () => { return { type: actionTypes.AUTH_SUCCESS } }\r\nconst authFailure = () => { return { type: actionTypes.AUTH_FAILURE } }\r\n\r\n//for setting auth token with request\r\nconst authInvalidToken = () => { return { type: actionTypes.AUTH_INVALID_TOKEN } }\r\nconst loadUserSuccess = (user) => {\r\n    return {\r\n        type: actionTypes.LOAD_USER_SUCCESS,\r\n        user: user\r\n    }\r\n}\r\n\r\n//logout\r\nexport const authLogout = () => { return { type: actionTypes.LOGOUT } }\r\n\r\nexport const auth = (name, email, password) => async dispatch => {\r\n    dispatch(authStart())\r\n\r\n    try {\r\n        let res = await axios.post(\r\n            'http://localhost:5000/api/users/',\r\n            // '/api/users/',\r\n            JSON.stringify({ name, email, password }),\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        )\r\n        localStorage.setItem('token', res.data.token)\r\n        dispatch(authSuccess())\r\n    } catch (error) {\r\n        dispatch(authFailure())\r\n        dispatch(setAlert('danger', error.response.data.msg))\r\n    }\r\n}\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    dispatch(authStart())\r\n\r\n    try {\r\n        let res = await axios.post(\r\n            'http://localhost:5000/api/auth/',\r\n            // '/api/auth/',\r\n            JSON.stringify({ email, password }),\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        )\r\n        localStorage.setItem('token', res.data.token)\r\n        dispatch(authSuccess())\r\n        dispatch(loadUser())\r\n    } catch (error) {\r\n        dispatch(authFailure())\r\n        console.log(error.response.data.msg)\r\n        dispatch(setAlert('danger', error.response.data.msg))\r\n    }\r\n}\r\n\r\nexport const loadUser = () => async dispatch => {\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        let res = await axios.get('http://localhost:5000/api/auth/')\r\n        // let res = await axios.get('/api/auth/')\r\n        dispatch(loadUserSuccess(res.data.user))\r\n    } catch (error) {\r\n        dispatch(authInvalidToken())\r\n        if (error.response) console.log(error.response.data.msg) //show a modal to user with this error and provide a login button\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    localStorage.removeItem('token')\r\n    dispatch(clearProfile())\r\n    dispatch(authLogout())\r\n}","import axios from 'axios'\r\n\r\nimport * as actionTypes from './types'\r\nimport { setAuthToken } from '../../utility/setAuthToken'\r\nimport { setAlert } from './alert'\r\nimport { logout } from './index'\r\n\r\nconst fetchProfileStart = () => { return { type: actionTypes.FETCH_PROFILE_START } }\r\nconst loadCurrentProfileSuccess = (profile) => { return { type: actionTypes.LOAD_CURRENT_PROFILE_SUCCESS, profile: profile } }\r\nconst loadAllProfilesSuccess = (profiles) => { return { type: actionTypes.LOAD_ALL_PROFILES_SUCCESS, profiles: profiles } }\r\nconst loadRepos = (repos) => { return { type: actionTypes.LOAD_REPOS, repos: repos } }\r\nconst profileError = () => { return { type: actionTypes.PROFILE_ERROR } }\r\n\r\nexport const currentProfile = () => async dispatch => {\r\n    dispatch(fetchProfileStart())\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        let res = await axios.get('http://localhost:5000/api/profiles/me')\r\n        // let res = await axios.get('/api/profiles/me')\r\n        console.log('profile exists')\r\n        dispatch(loadCurrentProfileSuccess(res.data.profile))\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch(profileError())\r\n        if (error.response.data.msg) dispatch(setAlert('danger', error.response.data.msg))\r\n    }\r\n}\r\n\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    dispatch(fetchProfileStart())\r\n\r\n    console.log(typeof (formData))\r\n    console.log(formData)\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        //console.log('sending data', formData)\r\n        let res = await axios.post('http://localhost:5000/api/profiles', JSON.stringify(formData), config)\r\n        // let res = await axios.post('/api/profiles', JSON.stringify(formData), config)\r\n\r\n        if (res.status === 200) dispatch(setAlert('success', edit ? 'Profile updated successfully !' : 'Profile created successfully !'))\r\n\r\n        dispatch(loadCurrentProfileSuccess(res.data.profile))\r\n        history.push('/dashboard')\r\n    } catch (error) {\r\n        dispatch(profileError())\r\n        console.log(error.response.data.errors)\r\n        if (error.response) {\r\n            error.response.data.errors.forEach(error => {\r\n                dispatch(setAlert('danger', error.msg))\r\n            });\r\n        }\r\n        console.log('some unknown error occurred !')\r\n    }\r\n}\r\n\r\n//clearing out profile\r\nexport const clearProfile = () => { return { type: actionTypes.CLEAR_PROFILE } }\r\n\r\n//adding an experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    dispatch(fetchProfileStart()) //starts loading spinner\r\n\r\n    console.log(formData)\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        let res = await axios.put('http://localhost:5000/api/profiles/experience', JSON.stringify(formData), config)\r\n        // let res = await axios.put('/api/profiles/experience', JSON.stringify(formData), config)\r\n\r\n        if (res.status === 200) dispatch(setAlert('success', 'Experience added successfully !'))\r\n\r\n        dispatch(loadCurrentProfileSuccess(res.data.profile))\r\n        history.push('/dashboard')\r\n    } catch (error) {\r\n        dispatch(profileError())\r\n        console.log(error)\r\n        if (error.response) {\r\n            error.response.data.errors.forEach(error => {\r\n                dispatch(setAlert('danger', error.msg))\r\n            });\r\n        }\r\n        console.log('some unknown error occurred !')\r\n    }\r\n}\r\n\r\n//adding an education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    dispatch(fetchProfileStart()) //starts loading spinner\r\n\r\n    console.log(formData)\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        let res = await axios.put('http://localhost:5000/api/profiles/education', JSON.stringify(formData), config)\r\n        // let res = await axios.put('/api/profiles/education', JSON.stringify(formData), config)\r\n\r\n        if (res.status === 200) dispatch(setAlert('success', 'Education added successfully !'))\r\n\r\n        dispatch(loadCurrentProfileSuccess(res.data.profile))\r\n        history.push('/dashboard')\r\n    } catch (error) {\r\n        dispatch(profileError())\r\n        console.log(error)\r\n        if (error.response) {\r\n            error.response.data.errors.forEach(error => {\r\n                dispatch(setAlert('danger', error.msg))\r\n            });\r\n        }\r\n        console.log('some unknown error occurred !')\r\n    }\r\n}\r\n\r\n\r\n//delete actions\r\n//delete experience\r\n\r\nexport const deleteExperience = (expId) => async dispatch => {\r\n    dispatch(fetchProfileStart())\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        let res = await axios.delete(`http://localhost:5000/api/profiles/experience/${expId}`)\r\n        // let res = await axios.delete(`/api/profiles/experience/${expId}`)\r\n\r\n        if (res.status === 200) dispatch(setAlert('success', 'Experience deleted successfully !'))\r\n\r\n        dispatch(loadCurrentProfileSuccess(res.data.profile))\r\n    } catch (error) {\r\n        dispatch(profileError())\r\n        console.log(error)\r\n        if (error.response) {\r\n            error.response.data.errors.forEach(error => {\r\n                dispatch(setAlert('danger', error.msg))\r\n            });\r\n        }\r\n        console.log('some unknown error occurred !')\r\n    }\r\n}\r\n\r\n//delete education\r\nexport const deleteEducation = (eduId) => async dispatch => {\r\n    dispatch(fetchProfileStart())\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        let res = await axios.delete(`http://localhost:5000/api/profiles/education/${eduId}`)\r\n        // let res = await axios.delete(`/api/profiles/education/${eduId}`)\r\n\r\n        if (res.status === 200) dispatch(setAlert('success', 'Education deleted successfully !'))\r\n\r\n        dispatch(loadCurrentProfileSuccess(res.data.profile))\r\n    } catch (error) {\r\n        dispatch(profileError())\r\n        console.log(error)\r\n        if (error.response) {\r\n            error.response.data.errors.forEach(error => {\r\n                dispatch(setAlert('danger', error.msg))\r\n            });\r\n        }\r\n        console.log('some unknown error occurred !')\r\n    }\r\n}\r\n\r\n//delete account/profile\r\nexport const deleteAccount = (history) => async dispatch => {\r\n    dispatch(fetchProfileStart())\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        let res = await axios.delete('http://localhost:5000/api/profiles')\r\n        // let res = await axios.delete('/api/profiles')\r\n\r\n        dispatch(logout())\r\n        if (res.status === 200) dispatch(setAlert('success', 'Account deleted successfully'))\r\n\r\n        history.push('/')\r\n    } catch (error) {\r\n        dispatch(profileError())\r\n        console.log(error)\r\n        if (error.response) {\r\n            error.response.data.errors.forEach(error => {\r\n                dispatch(setAlert('danger', error.msg))\r\n            });\r\n        }\r\n        console.log('some unknown error occurred !')\r\n    }\r\n}\r\n\r\n//get github repositories\r\nexport const getGithubRepos = (username) => async dispatch => {\r\n    dispatch(fetchProfileStart())\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        let res = await axios.get(`http://localhost:5000/api/profiles/github/${username}`)\r\n        // let res = await axios.get(`/api/profiles/github/${username}`)\r\n        console.log(res)\r\n        dispatch(loadRepos(res.data))\r\n    } catch (error) {\r\n        dispatch(profileError())\r\n        console.log(error.response)\r\n    }\r\n}\r\n\r\n//get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch(fetchProfileStart())\r\n\r\n    try {\r\n        let res = await axios.get('http://localhost:5000/api/profiles')\r\n        // let res = await axios.get('/api/profiles')\r\n        dispatch(loadAllProfilesSuccess(res.data.profiles))\r\n    } catch (error) {\r\n        dispatch(profileError())\r\n        dispatch(setAlert('danger', 'some unknown error occurred !'))\r\n    }\r\n}\r\n\r\n//get profile by user id\r\nexport const getProfileBUserId = userId => async dispatch => {\r\n    dispatch(fetchProfileStart())\r\n    dispatch(clearProfile())\r\n    dispatch(fetchProfileStart())\r\n    try {\r\n        let res = await axios.get(`http://localhost:5000/api/profiles/user/${userId}`)\r\n        // let res = await axios.get(`/api/profiles/user/${userId}`)\r\n        dispatch(loadCurrentProfileSuccess(res.data.profile))\r\n    } catch (error) {\r\n        dispatch(profileError())\r\n        dispatch(setAlert('danger', 'some unknown error occurred !'))\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\nimport * as actionTypes from './types'\r\nimport { setAuthToken } from '../../utility/setAuthToken'\r\nimport { setAlert } from './alert'\r\n\r\nconst postsStart = () => ({ type: actionTypes.LOAD_POSTS_START })\r\nconst postsError = error => ({ type: actionTypes.POSTS_ERROR, error: error })\r\nconst storePosts = posts => ({ type: actionTypes.LOAD_POSTS, posts: posts })\r\nconst storePost = post => ({ type: actionTypes.LOAD_POST, post: post })\r\nconst updateLikes = (id, likes) => ({ type: actionTypes.UPDATE_LIKES, id: id, likes: likes })\r\nconst updateComments = (id, comments) => ({ type: actionTypes.UPDATE_COMMENTS, id: id, comments: comments })\r\n\r\nexport const loadPosts = () => async dispatch => {\r\n    dispatch(postsStart())\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        const res = await axios.get('http://localhost:5000/api/posts')\r\n        // const res = await axios.get('/api/posts')\r\n        console.log(res.data)\r\n        dispatch(storePosts(res.data))\r\n    } catch (error) {\r\n        console.log(error, error.response)\r\n        dispatch(postsError(error.response.data.msg))\r\n    }\r\n}\r\n\r\nexport const addPost = (text) => async dispatch => {\r\n    dispatch(postsStart())\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        await axios.post('http://localhost:5000/api/posts', text, config)\r\n        // await axios.post('/api/posts', text, config)\r\n        dispatch(loadPosts())\r\n    } catch (error) {\r\n        console.log(error, error.response)\r\n        dispatch(postsError(error.response.data.msg))\r\n    }\r\n}\r\n\r\n//Like a post\r\nexport const addLike = (id) => async dispatch => {\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        const res = await axios.put(`http://localhost:5000/api/posts/like/${id}`)\r\n        // const res = await axios.put(`/api/posts/like/${id}`)\r\n        console.log(res.data)\r\n        dispatch(updateLikes(id, res.data))\r\n    } catch (error) {\r\n        console.log(error, error.response)\r\n        dispatch(postsError(error.response.data.msg))\r\n    }\r\n}\r\n\r\n//remove your like\r\nexport const removeLike = (id) => async dispatch => {\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        const res = await axios.put(`http://localhost:5000/api/posts/unlike/${id}`)\r\n        // const res = await axios.put(`/api/posts/unlike/${id}`)\r\n        console.log(res.data)\r\n        dispatch(updateLikes(id, res.data))\r\n    } catch (error) {\r\n        console.log(error, error.response)\r\n        dispatch(postsError(error.response.data.msg))\r\n    }\r\n}\r\n\r\n//delete post\r\nexport const deletePost = (id) => async dispatch => {\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        await axios.delete(`http://localhost:5000/api/posts/${id}`)\r\n        // await axios.delete(`/api/posts/${id}`)\r\n        dispatch(loadPosts())\r\n        dispatch(setAlert('success', 'Post removed !'))\r\n    } catch (error) {\r\n        console.log(error, error.response)\r\n        dispatch(postsError(error.response.data.msg))\r\n    }\r\n}\r\n\r\n//get post by id\r\nexport const loadPost = id => async dispatch => {\r\n    dispatch(postsStart())\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        const res = await axios.get(`http://localhost:5000/api/posts/${id}`)\r\n        // const res = await axios.get(`/api/posts/${id}`)\r\n        console.log(res.data)\r\n        dispatch(storePost(res.data))\r\n    } catch (error) {\r\n        console.log(error, error.response)\r\n        error.response && dispatch(postsError(error.response.data.message))\r\n    }\r\n}\r\n\r\n//Add comment\r\nexport const addComment = (id, text) => async dispatch => {\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        const res = await axios.put(`http://localhost:5000/api/posts/${id}/comment`, text, config)\r\n        // const res = await axios.put(`/api/posts/${id}/comment`, text, config)\r\n        console.log(res.data)\r\n        dispatch(updateComments(id, res.data))\r\n    } catch (error) {\r\n        console.log(error, error.response)\r\n        dispatch(postsError(error.response.data.msg))\r\n    }\r\n}\r\n\r\n//Remove comment\r\nexport const deleteComment = (id, commentId) => async dispatch => {\r\n    try {\r\n        setAuthToken(localStorage.getItem('token'))\r\n        const res = await axios.delete(`http://localhost:5000/api/posts/${id}/deleteComment/${commentId}`)\r\n        // const res = await axios.delete(`/api/posts/${id}/deleteComment/${commentId}`)\r\n        console.log(res.data)\r\n        dispatch(updateComments(id, res.data))\r\n        dispatch(setAlert('success', 'Comment removed !'))\r\n    } catch (error) {\r\n        console.log(error, error.response)\r\n        dispatch(postsError(error.response.data.msg))\r\n    }\r\n}","function formatDate(date) {\r\n    return new Intl.DateTimeFormat().format(new Date(date))\r\n}\r\n\r\nexport default formatDate;","import { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { deleteExperience } from '../../store/actions'\r\nimport formatDate from '../../utility/formatDate'\r\n\r\nconst ListExperience = props => {\r\n\r\n    const deleteExperienceHandler = (expId) => {\r\n        console.log(expId)\r\n        props.deleteExperience(expId)\r\n    }\r\n\r\n    const experiences = props.profile.experience.map(exp => (\r\n        <tr key={exp._id}>\r\n            <td>{exp.company}</td>\r\n            <td className=\"hide-sm\">{exp.title}</td>\r\n            <td>\r\n                {formatDate(exp.from)} - {exp.to ? formatDate(exp.to) : 'Present'}\r\n            </td>\r\n            <td>\r\n                <button className=\"btn btn-dark\" onClick={deleteExperienceHandler.bind(this, exp._id)} >Delete</button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n\r\n    // let content = (\r\n\r\n    // )\r\n\r\n    !props.profile.experience && console.log('no data')\r\n\r\n    return <Fragment>\r\n        <h2 style={{ marginTop: '1.5rem', marginBottom: '1rem' }}>Experience Credentials</h2>\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Company</th>\r\n                    <th className=\"hide-sm\">Title</th>\r\n                    <th className=\"hide-sm\">Years</th>\r\n                    <th />\r\n                </tr>\r\n            </thead>\r\n            <tbody>{experiences}</tbody>\r\n        </table>\r\n    </Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: state.profile.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { deleteExperience })(ListExperience)","import { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { deleteEducation } from '../../store/actions'\r\nimport formatDate from '../../utility/formatDate'\r\n\r\nconst ListEducation = props => {\r\n\r\n    const deleteEducationHandler = (eduId) => {\r\n        console.log(eduId)\r\n        props.deleteEducation(eduId)\r\n    }\r\n\r\n    const educations = props.profile.education.map(edu => (\r\n        <tr key={edu._id}>\r\n            <td>{edu.school}</td>\r\n            <td className=\"hide-sm\">{edu.degree}</td>\r\n            <td>\r\n                {formatDate(edu.from)} - {edu.to ? formatDate(edu.to) : 'Present'}\r\n            </td>\r\n            <td>\r\n                <button className=\"btn btn-dark\" onClick={deleteEducationHandler.bind(this, edu._id)}>Delete</button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n\r\n    return <Fragment>\r\n        <h2 style={{marginTop: '1.5rem', marginBottom: '1rem'}}>Education Credentials</h2>\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>School</th>\r\n                    <th className=\"hide-sm\">Degree</th>\r\n                    <th className=\"hide-sm\">Years</th>\r\n                    <th />\r\n                </tr>\r\n            </thead>\r\n            <tbody>{educations}</tbody>\r\n        </table>\r\n    </Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: state.profile.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { deleteEducation })(ListEducation)","import { Fragment, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport Spinner from '../UIElements/Spinner'\r\nimport ListExperience from './ListExperience'\r\nimport ListEducation from './ListEducation'\r\nimport { currentProfile, deleteAccount } from '../../store/actions'\r\n\r\nconst Dashboard = props => {\r\n\r\n  useEffect(() => {\r\n    props.LOAD_CURRENT_USER()\r\n  }, [])\r\n\r\n  const alertClasses = ['alert']\r\n  if (props.alertType === 'success') alertClasses.push('alert-primary')\r\n  else alertClasses.push('alert-dark')\r\n\r\n  let dashboard = (\r\n    <div className='container'>\r\n      <h1 className='primary-color'>Dashboard</h1>\r\n      <p className='medium'><i className='fas fa-user'></i> Welcome {props.user && props.user.name}</p>\r\n      {!props.loading && !props.profile && <Fragment>\r\n        <h3>No profile found for your user. Create one ?</h3> <Link className='btn btn-primary' to='/create-profile'>Create Profile</Link>\r\n      </Fragment>\r\n      }\r\n\r\n      {props.alertMsg ? <p className={alertClasses.join(' ')}>{props.alertMsg}</p> : null}\r\n\r\n      {!props.loading && props.profile && <Fragment>\r\n        <Link to='/edit-profile' className='btn btn-light'>\r\n          <i className='fas fa-user-circle text-primary' /> Edit Profile\r\n        </Link>\r\n        <Link to='/add-experience' className='btn btn-light'>\r\n          <i className='fab fa-black-tie text-primary' /> Add Experience\r\n        </Link>\r\n        <Link to='/add-education' className='btn btn-light'>\r\n          <i className='fas fa-graduation-cap text-primary' /> Add Education\r\n        </Link>\r\n        <ListExperience />\r\n        <ListEducation />\r\n        <button className='btn btn-large btn-dark' style={{marginTop: '1.5rem'}} onClick={() => props.DELETE_ACCOUNT(props.history)}>Delete Account</button>\r\n      </Fragment>}\r\n    </div>\r\n  )\r\n  if (props.loading) dashboard = <Spinner />\r\n\r\n  return dashboard\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.profile.loading,\r\n    user: state.auth.user,\r\n    profile: state.profile.profile,\r\n    alertMsg: state.alert.msg,\r\n    alertType: state.alert.type\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    LOAD_CURRENT_USER: () => dispatch(currentProfile()),\r\n    DELETE_ACCOUNT: (history) => dispatch(deleteAccount(history))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dashboard))","const checkValidity = (value, rules) => {\r\n    let isValid = true\r\n\r\n    if(!rules) {return true}\r\n\r\n    if(rules.required) {\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    if(rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n    \r\n    if(rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid\r\n}\r\n\r\nexport default checkValidity","import { Fragment } from 'react'\r\n\r\nimport './Input.css'\r\n\r\nconst Input = props => {\r\n    const { invalid, elementType, elementConfig, touched, changed, value, info, icon, checked } = props\r\n\r\n    let cssClasses = ['input']\r\n    if (invalid && touched) {\r\n        cssClasses.push('invalid')\r\n    }\r\n\r\n    let inputElement\r\n\r\n    if (elementType === 'input') {\r\n        if (elementConfig.type === 'date') {\r\n            inputElement = (\r\n                <Fragment>\r\n                    <h3>{info}</h3>\r\n                    <input className={cssClasses.join(' ')} {...elementConfig} onChange={changed} value={value} />\r\n                </Fragment>\r\n            )\r\n        } else if (elementConfig.type === 'checkbox') {\r\n            inputElement = (\r\n                <Fragment>\r\n                    <input type='checkbox' onChange={changed} value={checked} checked={checked} /> <span style={{ fontWeight: 'bold' }}>{elementConfig.placeholder}</span>\r\n                </Fragment>\r\n            )\r\n        } else {\r\n            inputElement = (\r\n                <Fragment>\r\n                    {icon === 'null' ? null : icon}\r\n                    <input className={cssClasses.join(' ')} {...elementConfig} onChange={changed} value={value} />\r\n                    <small>{info}</small>\r\n                </Fragment>\r\n            )\r\n        }\r\n    } else if (elementType === 'textarea') {\r\n        inputElement = (\r\n            <Fragment>\r\n                <textarea className={cssClasses.join(' ')} {...elementConfig} onChange={changed} value={value} />\r\n                <small>{info}</small>\r\n            </Fragment>\r\n        )\r\n    } else if (elementType === 'select') {\r\n        inputElement = (\r\n            <Fragment>\r\n                <select className={cssClasses.join(' ')} onChange={changed}>\r\n                    <option value='' >{elementConfig.option1}</option>\r\n                    {elementConfig.options.map(option =>\r\n                        <option key={option.value} value={option.value} >{option.displayValue}</option>\r\n                    )}\r\n                </select>\r\n                <small>{info}</small>\r\n            </Fragment>\r\n        )\r\n    } else if (elementType === 'date') {\r\n        console.log('here')\r\n        inputElement = (\r\n            <Fragment>\r\n                <h3>{info}</h3>\r\n                <input className={cssClasses.join(' ')} {...elementConfig} onChange={changed} value={value} />\r\n                <p>Sucks !!!</p>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    const mainDivCss = ['form-group']\r\n    if (icon) {\r\n        mainDivCss.push('social-input')\r\n    }\r\n    return <div className={mainDivCss.join(' ')}>{inputElement}</div>\r\n}\r\n\r\nexport default Input","import { Fragment, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { login } from '../../store/actions'\r\nimport Spinner from '../UIElements/Spinner'\r\nimport CheckValidity from '../../utility/checkValidity'\r\nimport Input from '../UIElements/Input'\r\n\r\nconst Login = props => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Email Address'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 5\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    })\r\n\r\n    const [isFormValid, setIsFormValid] = useState(false)\r\n\r\n    const onChangeHandler = (identifier, rules) => {\r\n        const updatedFormData = { ...formData }\r\n        const updatedFormDataDeep = { ...updatedFormData[identifier] }\r\n\r\n        //set values\r\n        updatedFormDataDeep.value = event.target.value\r\n        updatedFormDataDeep.valid = CheckValidity(event.target.value, rules)\r\n        updatedFormDataDeep.touched = true\r\n\r\n        updatedFormData[identifier] = updatedFormDataDeep\r\n\r\n        let isFormValid = true\r\n        for (let key in updatedFormData) {\r\n            isFormValid = updatedFormData[key].valid && isFormValid\r\n        }\r\n        setIsFormValid(isFormValid)\r\n        setFormData(updatedFormData)\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        // event.preventDefault();\r\n        props.LOGIN(formData.email.value, formData.password.value)\r\n    }\r\n\r\n    const loginFormArray = []\r\n    for (let i in formData) {\r\n        const formElement = {\r\n            id: i,\r\n            config: formData[i]\r\n        }\r\n        loginFormArray.push(formElement)\r\n    }\r\n\r\n    let loginButtonClasses = ['btn', 'btn-large', 'btn-primary']\r\n    if(!isFormValid) {\r\n        loginButtonClasses.push('btn-disabled')\r\n    }\r\n\r\n    let form = (\r\n        <form onSubmit={loginHandler}>\r\n            {\r\n                loginFormArray.map(i => {\r\n                    return (\r\n                        <Input\r\n                            key={i.id}\r\n                            invalid={!i.config.valid}\r\n                            touched={i.config.touched}\r\n                            elementType={i.config.elementType}\r\n                            elementConfig={i.config.elementConfig}\r\n                            changed={onChangeHandler.bind(this, i.id, i.config.validation)}\r\n                            value={i.config.value} />\r\n                    )\r\n                })\r\n            }\r\n            <input type=\"submit\" disabled={!isFormValid} className={loginButtonClasses.join(' ')} value=\"login\" /><br />\r\n            Don't have an account ? <Link to='/register' className='btn btn-primary'>Sign up</Link>\r\n        </form>\r\n    )\r\n\r\n    if (props.loading) {\r\n        form = <Spinner />\r\n    }\r\n\r\n    //useful when we have classes based on conditions\r\n    const alertCssClass = ['alert']\r\n    if(props.alertType === 'danger') {alertCssClass.push('alert-dark')}\r\n\r\n    if(props.isAuth) {return <Redirect to='/dashboard' />}\r\n\r\n    return <Fragment>\r\n        <section className='container'>\r\n            <div>\r\n                <h1 className='primary-color large'>Login</h1>\r\n                <p className='medium'><i className='fas fa-user'></i> Sign into your account</p>\r\n\r\n                {props.alertMsg ? <p className={alertCssClass.join(' ')}>{props.alertMsg}</p> : null}\r\n                {props.error ? <p className={alertCssClass.join(' ')}>{props.error}</p> : null}\r\n\r\n                {form}\r\n\r\n            </div>\r\n        </section>\r\n    </Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        alertMsg: state.alert.msg,\r\n        alertType: state.alert.type,\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        LOGIN: (email, password) => dispatch(login(email, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import { Fragment, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setAlert, auth } from '../../store/actions'\r\nimport CheckValidity from '../../utility/checkValidity'\r\nimport Input from '../UIElements/Input'\r\nimport Spinner from '../UIElements/Spinner'\r\n\r\nconst Register = props => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Name'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            info: ''\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Email Address'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            info: 'This site uses gravatar, so if you want to have a profile image, use that one.'\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 5\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            info: ''\r\n        },\r\n        password2: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Confirm Password'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 5\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            info: ''\r\n        }\r\n    })\r\n\r\n    const [isFormValid, setIsFormValid] = useState(false)\r\n\r\n    const onChangeHandler = (identifier, rules) => {\r\n        const updatedFormData = { ...formData }\r\n        const updatedFormDataDeep = { ...updatedFormData[identifier] }\r\n\r\n        //set values\r\n        updatedFormDataDeep.value = event.target.value\r\n        updatedFormDataDeep.valid = CheckValidity(event.target.value, rules)\r\n        updatedFormDataDeep.touched = true\r\n\r\n        updatedFormData[identifier] = updatedFormDataDeep\r\n\r\n        let isFormValid = true\r\n        for (let key in updatedFormData) {\r\n            isFormValid = updatedFormData[key].valid && isFormValid\r\n        }\r\n        setIsFormValid(isFormValid)\r\n        setFormData(updatedFormData)\r\n    }\r\n\r\n    const registerHandler = () => {\r\n        event.preventDefault();\r\n        if (formData.password.value !== formData.password2.value) {\r\n            return props.ALERT('danger', 'passwords do not match')\r\n        }\r\n        props.AUTH(formData.name.value, formData.email.value, formData.password.value)\r\n    }\r\n\r\n    const registerFormArray = []\r\n    for (let i in formData) {\r\n        const formElement = {\r\n            id: i,\r\n            config: formData[i]\r\n        }\r\n        registerFormArray.push(formElement)\r\n    }\r\n\r\n    let registerButtonClasses = ['btn', 'btn-large', 'btn-primary']\r\n    if (!isFormValid) {\r\n        registerButtonClasses.push('btn-disabled')\r\n    }\r\n\r\n    let form = (\r\n        <form onSubmit={registerHandler}>\r\n            {\r\n                registerFormArray.map(i => {\r\n                    return (\r\n                        <Input\r\n                            key={i.id}\r\n                            invalid={!i.config.valid}\r\n                            touched={i.config.touched}\r\n                            elementType={i.config.elementType}\r\n                            elementConfig={i.config.elementConfig}\r\n                            changed={onChangeHandler.bind(this, i.id, i.config.validation)}\r\n                            info={i.config.info}\r\n                            value={i.config.value} />\r\n                    )\r\n                })\r\n            }\r\n            <input type=\"submit\" disabled={!isFormValid} className={registerButtonClasses.join(' ')} style={{ border: 'none' }} value=\"Register\" /><br />\r\n                    Already have an account ? <Link to='/login' className='btn btn-primary'>Login</Link>\r\n        </form>\r\n    )\r\n    if (props.loading) {\r\n        form = <Spinner />\r\n    }\r\n\r\n    const alertCssClass = ['alert']\r\n    if(props.alertType === 'danger') {alertCssClass.push('alert-dark')}\r\n    if(props.alertType === 'success') {alertCssClass.push('alert-primary')}\r\n\r\n    if (props.isAuth) {return <Redirect to='/dashboard' />}\r\n\r\n    return <Fragment>\r\n        <section className='container'>\r\n            <div>\r\n                <h1 className='primary-color large'>Sign Up</h1>\r\n                <p className='medium'><i className='fas fa-user'></i> Create your account</p>\r\n\r\n                {props.alertMsg ? <p className={alertCssClass.join(' ')}>{props.alertMsg}</p> : null}\r\n                {props.error ? <p className={alertCssClass.join(' ')}>{props.error}</p> : null}\r\n\r\n                {form}\r\n\r\n            </div>\r\n        </section>\r\n    </Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        alertMsg: state.alert.msg,\r\n        alertType: state.alert.type,\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ALERT: (type, msg) => dispatch(setAlert(type, msg)),\r\n        AUTH: (name, email, password) => dispatch(auth(name, email, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","import { Fragment } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst ProfileItem = ({ profile, history }) => {\r\n    const dummyGravatar = 'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200'\r\n    return <Fragment>\r\n        <div className='profiles'>\r\n            <img src={profile.user.avatar ? profile.user.avatar : dummyGravatar} alt='Poor Internet, Cant load image' />\r\n            <div>\r\n                <h2>{profile.user.name}</h2>\r\n                <p>{profile.status} {profile.company && <span>at {profile.company}</span>}</p>\r\n                <p>{profile.location}</p>\r\n                <button onClick={() => history.push(`/user/${profile.user._id}`)} className='btn btn-primary btn-large' style={{ marginTop: '0.5rem' }}>View Profile</button>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    {profile.skills.map(skill => (\r\n                        <li key={skill}>\r\n                            <h3 className='primary-color'><i className='fas fa-check'>{skill}</i></h3>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nexport default withRouter(ProfileItem)","import { Fragment, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Spinner from '../UIElements/Spinner'\r\nimport { getProfiles } from '../../store/actions'\r\nimport ProfileItem from './ProfileItem'\r\n\r\nconst Developers = props => {\r\n\r\n    useEffect(() => {\r\n        props.getProfiles()\r\n    }, [])\r\n\r\n    let content = (\r\n        <Fragment>\r\n            <div className='container'>\r\n                <h1 className='primary-color'>Developers</h1>\r\n                <p className='medium' style={{marginBottom: '10px'}}><i className='fab fa-connectdevelop'></i> Browse and Connect with Developers</p>\r\n                {props.profiles.map(profile => <div key={profile._id}><ProfileItem profile={profile} /></div>)}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n    if (props.loading) content = <Spinner />\r\n\r\n    return content\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.profile.loading,\r\n        profiles: state.profile.profiles\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Developers)","import { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport formatDate from '../../utility/formatDate'\r\nimport { addLike, deletePost, removeLike } from '../../store/actions'\r\n\r\nconst Post = ({ post, userId, addLike, deletePost, removeLike, showActions, lightBg }) => {\r\n\r\n    const postClasses = ['post']\r\n    if(lightBg) postClasses.push('bg-light')\r\n\r\n    return <Fragment>\r\n        <div className={postClasses.join(' ')}>\r\n            <div>\r\n                <Link to={`/user/${post.user}`}>\r\n                    <img src={post.avatar} alt='cant load image' />\r\n                    <h4 className='primary-color'>{post.name}</h4>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <Link to={`/posts/${post._id}`}>\r\n                    <p className=\"my-top-1\" style={{ color: 'black', cursor: 'default' }}>\r\n                        {post.text}\r\n                    </p>\r\n                </Link>\r\n                <p className=\"post-date my-top\">\r\n                    Posted on {formatDate(post.date)}\r\n                </p>\r\n                {showActions && <Fragment>\r\n                    <button type=\"button\" className=\"btn btn-light\" onClick={e => addLike(post._id)}>\r\n                        <i className=\"fas fa-thumbs-up\"></i>\r\n                        <span>{post.likes.length === 0 ? null : <span> {post.likes.length}</span>}</span>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-light\" onClick={e => removeLike(post._id)}>\r\n                        <i className=\"fas fa-thumbs-down\"></i>\r\n                    </button>\r\n                    <Link to={`/posts/${post._id}`} className=\"btn btn-primary\">\r\n                        Discussion {post.comments.length === 0 ? null : <span className='comment-count'> {post.comments.length}</span>}\r\n                    </Link>\r\n                    {post.user === userId && <button type=\"button\" className=\"btn btn-large btn-dark\" onClick={e => deletePost(post._id)}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>}\r\n                </Fragment>}\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userId: state.auth.user._id\r\n})\r\n\r\nexport default connect(mapStateToProps, { addLike, deletePost, removeLike })(Post)","import { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { loadPosts, addPost } from '../../store/actions'\r\nimport Spinner from '../UIElements/Spinner'\r\n\r\nimport Post from './Post'\r\n\r\nconst Posts = ({ loadPosts, addPost, isAuth, posts: { posts, loading }, alertMsg, alertType }) => {\r\n\r\n  const [text, setText] = useState('')\r\n\r\n  useEffect(() => {\r\n    isAuth && loadPosts()\r\n  }, [isAuth, loadPosts])\r\n\r\n  const changeHandler = event => {\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const submitPostHandler = (event) => {\r\n    event.preventDefault();\r\n    addPost({ text })\r\n    setText('')\r\n  }\r\n\r\n  let displayPosts\r\n  if (!loading) displayPosts = posts\r\n\r\n  const alertClasses = ['alert']\r\n  if (alertType === 'success') alertClasses.push('alert-primary')\r\n  else alertClasses.push('alert-dark')\r\n\r\n  return <div className='container'>\r\n    <h1 className='primary-color' style={{ fontSize: '2.8rem' }}>Posts</h1>\r\n    <p className='medium'><i className=\"fas fa-user\"></i>Welcome to the community !</p>\r\n\r\n    {/* Form for making post */}\r\n    <p className='alert alert-primary my-bottom-1'><strong>Say Something</strong></p>\r\n    <textarea style={{ width: '100%', fontSize: '1.3rem', padding: '0.5rem' }} rows='6' value={text} placeholder='Create A Post' onChange={changeHandler.bind(this)} />\r\n    <button className='btn btn-large btn-primary' onClick={submitPostHandler.bind(this)}>Submit</button>\r\n\r\n    {!loading && alertMsg && <p className={alertClasses.join(' ')}>{alertMsg}</p>}\r\n\r\n    {loading ? <Spinner /> : (posts.length === 0 ? <h1>No posts to show</h1> : posts.map(post => (\r\n      <Post key={post._id} post={post} showActions={true} />\r\n    )))}\r\n\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.post,\r\n  isAuth: state.auth.isAuth,\r\n  alertType: state.alert.type,\r\n  alertMsg: state.alert.msg\r\n})\r\n\r\nexport default connect(mapStateToProps, { loadPosts, addPost })(Posts)","import { useState, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { addComment } from '../../store/actions'\r\n\r\nconst DiscussionForm = ({ postId, addComment }) => {\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const changeHandler = event => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const submitPostHandler = (event) => {\r\n        event.preventDefault();\r\n        addComment(postId, { text })\r\n        setText('')\r\n    }\r\n\r\n    return <Fragment>\r\n        <div>\r\n            <div className='alert alert-primary'><h4>Leave A Comment</h4></div>\r\n            <form className=\"my-top-1\">\r\n                <textarea style={{ width: '100%', fontSize: '1.3rem', padding: '0.5rem' }} rows='3' value={text} placeholder='Write something...' onChange={changeHandler.bind(this)} />\r\n                <button className='btn btn-large btn-dark' onClick={submitPostHandler.bind(this)}>Submit</button>\r\n            </form>\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nexport default connect(null, { addComment })(DiscussionForm)","import { Fragment, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport Post from './Post'\r\nimport DiscussionForm from './DiscussionForm'\r\nimport Spinner from '../UIElements/Spinner'\r\nimport { loadPost, deleteComment } from '../../store/actions'\r\nimport formatDate from '../../utility/formatDate'\r\n\r\nconst PostDiscussion = ({ loadPost, posts: { post, loading, error }, userId, match, history, deleteComment, alertMsg }) => {\r\n\r\n    useEffect(() => {\r\n        loadPost(match.params.id)\r\n    }, [])\r\n\r\n    !loading && post && console.log(post.comments)\r\n\r\n    const comments = !loading && post && post.comments.map(comment => (\r\n        <div className=\"comments\" key={comment._id}>\r\n            <div className=\"post my-top-1\">\r\n                <div>\r\n                    <Link to={`/user/${comment.user}`}>\r\n                        <img\r\n                            src={comment.avatar}\r\n                            alt=\"Cant load image\"\r\n                        />\r\n                        <h4 className='primary-color'>{comment.name}</h4>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <p className=\"my-top-1\">\r\n                        {comment.text}\r\n                    </p>\r\n                    <p className=\"post-date\">\r\n                        Posted on {formatDate(comment.date)}\r\n                    </p>\r\n                    {comment.user === userId && <button type=\"button\" className=\"btn btn-large btn-dark\" onClick={e => deleteComment(post._id, comment._id)}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ))\r\n\r\n    return loading ? <Spinner /> : (!post ? <h2 className='container'>{error}</h2> : <Fragment>\r\n        <div className='container'>\r\n            <button className='btn btn-large' onClick={() => history.goBack()}>Back to Posts</button>\r\n            <Post post={post} userId={userId} showActions={false} lightBg={true} />\r\n\r\n            <DiscussionForm postId={post._id} />\r\n\r\n            {!loading && alertMsg && <p className='alert alert-primary'>{alertMsg}</p>}\r\n\r\n            {comments}\r\n        </div>\r\n    </Fragment>)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alertMsg: state.alert.msg,\r\n    posts: state.post,\r\n    userId: state.auth.user._id\r\n})\r\n\r\nexport default connect(mapStateToProps, { loadPost, deleteComment })(withRouter(PostDiscussion))","import { useEffect } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { logout } from '../../store/actions'\r\n\r\nconst Signout = ({ logout }) => {\r\n    useEffect(() => {\r\n        logout()\r\n    }, [])\r\n\r\n    return <Redirect to='/' />\r\n}\r\n\r\nexport default connect(null, {logout})(Signout)","import { useState, useEffect } from 'react'\r\n\r\nimport checkValidity from '../utility/checkValidity'\r\n\r\nconst useForm = props => {\r\n\r\n    const [showSocialLinks, setShowSocialLinks] = useState(false)\r\n\r\n    let fields = []\r\n    for (let key in props) {\r\n        let type = 'text'\r\n        let placeholder = ''\r\n        let elementType = 'input'\r\n        let options = []\r\n        let option1 = '' //for placeholder in dropdown\r\n        let icon = null\r\n\r\n        if (props[key].name === 'name') { placeholder = 'Name' }\r\n\r\n        if (props[key].name === 'email') { placeholder = 'Email Address' }\r\n\r\n        if (props[key].name === 'password') {\r\n            type = 'password'\r\n            placeholder = 'Password'\r\n        }\r\n\r\n        if (props[key].name === 'password2') {\r\n            type = 'password'\r\n            placeholder = 'Confirm Password'\r\n        }\r\n\r\n        if (props[key].name === 'status') {\r\n            elementType = 'select'\r\n            option1 = props[key].options[0]\r\n            props[key].options.shift()\r\n            props[key].options.map(option => options.push({ value: option.toLowerCase().trim().split(' ').join(''), displayValue: option }))\r\n        }\r\n\r\n        if (props[key].name === 'company') { placeholder = props[key].validation ? '* Company' : 'Company' }\r\n\r\n        if (props[key].name === 'website') { placeholder = 'Website' }\r\n\r\n        if (props[key].name === 'location') { placeholder = 'Location' }\r\n\r\n        if (props[key].name === 'skills') { placeholder = '* Skills' }\r\n\r\n        if (props[key].name === 'githubusername') { placeholder = 'Github Username' }\r\n\r\n        if (props[key].name === 'bio') {\r\n            elementType = 'textarea'\r\n            placeholder = 'A short bio of yourself'\r\n        }\r\n\r\n        if (props[key].name === 'description') {\r\n            elementType = 'textarea'\r\n            placeholder = 'Job Description'\r\n        }\r\n\r\n        if (props[key].name === 'title') { placeholder = '* Job Title' }\r\n\r\n        if (props[key].name === 'from' || props[key].name === 'to') {\r\n            type = 'date'\r\n        }\r\n\r\n        if (props[key].name === 'current') {\r\n            type = 'checkbox'\r\n            placeholder = props[key].info\r\n        }\r\n\r\n        if (props[key].name === 'school') { placeholder = '* School or Bootcamp' }\r\n        if (props[key].name === 'degree') { placeholder = '* Degree or Certificate' }\r\n        if (props[key].name === 'fieldOfStudy') { placeholder = 'Field Of Study' }\r\n\r\n        if (props[key].name === 'twitter') {\r\n            icon = <i className=\"fab fa-twitter fa-2x\"></i>\r\n            placeholder = 'Twitter URL'\r\n        }\r\n        if (props[key].name === 'facebook') {\r\n            icon = <i className=\"fab fa-facebook fa-2x\"></i>\r\n            placeholder = 'Facebook URL'\r\n        }\r\n        if (props[key].name === 'youtube') {\r\n            icon = <i className=\"fab fa-youtube fa-2x\"></i>\r\n            placeholder = 'Youtube URL'\r\n        }\r\n        if (props[key].name === 'linkedIn') {\r\n            icon = <i className=\"fab fa-linkedin fa-2x\"></i>\r\n            placeholder = 'LinkedIn URL'\r\n        }\r\n        if (props[key].name === 'instagram') {\r\n            icon = <i className=\"fab fa-instagram fa-2x\"></i>\r\n            placeholder = 'Instagram URL'\r\n        }\r\n\r\n        const field = {\r\n            elementType: elementType,\r\n            elementConfig: {\r\n                type: type,\r\n                placeholder: placeholder,\r\n                option1: option1 ? option1 : null,\r\n                options\r\n            },\r\n            checked: props[key].checkbox === true ? true : false,\r\n            value: '',\r\n            validation: props[key].validation ? props[key].validation : '',\r\n            valid: props[key].validation ? false : true,\r\n            touched: props[key].validation ? false : true,\r\n            info: props[key].info ? props[key].info : '',\r\n            icon: icon\r\n        }\r\n        const fieldPush = {\r\n            id: props[key].name,\r\n            config: field\r\n        }\r\n\r\n        fields.push(fieldPush)\r\n    }\r\n\r\n    const [formData, setFormData] = useState(fields)\r\n    const [isFormValid, setIsFormValid] = useState(false)\r\n\r\n    const formArray = []\r\n    for (let key in formData) {\r\n        formArray.push(formData[key])\r\n    }\r\n\r\n    const onChangeHandler = (identifier, rules) => {\r\n\r\n        const copiedForm = { ...formData }\r\n        const index = formArray.findIndex(i => i.id === identifier)\r\n\r\n        const updatedFormData = { ...copiedForm[index] }\r\n\r\n        updatedFormData.config.value = event.target.value\r\n        updatedFormData.config.valid = checkValidity(event.target.value, rules)\r\n        updatedFormData.config.touched = true\r\n\r\n        //setting values differently for checkboxes- using the checked field\r\n        if (identifier === 'current') updatedFormData.config.checked = !updatedFormData.config.checked\r\n\r\n        copiedForm[index] = updatedFormData\r\n\r\n        let isFormValid = true\r\n        for (let key in copiedForm) {\r\n            isFormValid = isFormValid && copiedForm[key].config.valid\r\n        }\r\n\r\n        setFormData(copiedForm)\r\n        setIsFormValid(isFormValid)\r\n    }\r\n\r\n    return [formData, isFormValid, onChangeHandler]\r\n}\r\n\r\nexport default useForm","import { Fragment } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport useForm from '../../../hooks/useForm'\r\nimport Input from '../../UIElements/Input'\r\nimport { createProfile } from '../../../store/actions'\r\n\r\nconst CreateProfile = props => {\r\n\r\n    //param1 = name, param2 = validation, param3= info/subscript, param4 = options  | returns form, overall validity, onChangeHandler\r\n    //for dropdown inputs please provide options also\r\n    const statusOptions = ['* Select Professional Status', 'Developer', 'Junior Developer', 'Senior Developer', 'Manager', 'Student or Learning', 'Instructor', 'Intern', 'Other']\r\n\r\n    const [formData, isFormValid, onChangeHandler] = useForm([\r\n        { name: 'status', validation: { required: true }, info: 'Give us an idea of where you are at in your career', options: statusOptions },\r\n        { name: 'company', info: 'Could be your own company or one you work for' },\r\n        { name: 'website', info: 'Could be your own or a company website' },\r\n        { name: 'location', info: 'City & state suggested (eg. Boston, MA)' },\r\n        { name: 'skills', validation: { required: true }, info: 'Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)' },\r\n        { name: 'githubusername', info: 'If you want your latest repos and a Github link, include your username' },\r\n        { name: 'bio', info: 'Tell us a little about yourself' },\r\n        { name: 'twitter' },\r\n        { name: 'facebook' },\r\n        { name: 'youtube' },\r\n        { name: 'linkedIn' },\r\n        { name: 'instagram' }\r\n    ])\r\n\r\n    //cant do optional stuff inside hook because we are not managing the field via state. \r\n    //we have custom dynamic JS object field for each input field, manage state here itself for optional cases.\r\n\r\n    const createProfileHandler = () => {\r\n        event.preventDefault();\r\n\r\n        //converting formData to the form we expect at the backend {status: '', company: '', ...}\r\n        let userFormData = {}\r\n        for (let userInputIdentifier in formData) {\r\n            let name = formData[userInputIdentifier].id\r\n            userFormData[name] = formData[userInputIdentifier].config.value\r\n        }\r\n        console.log(userFormData)\r\n        props.createProfile(userFormData, props.history)\r\n    }\r\n\r\n    //converting object format to an array to loop through and map each one to an input field\r\n    const formArray = []\r\n    for (let key in formData) {\r\n        formArray.push(formData[key])\r\n    }\r\n\r\n    let CreateProfileButtonClasses = ['btn', 'btn-large', 'btn-primary']\r\n    if (!isFormValid) {\r\n        CreateProfileButtonClasses.push('btn-disabled')\r\n    }\r\n\r\n    return <Fragment>\r\n        <div className='container'>\r\n            <h1 className='large primary-color'>Create Your Profile</h1>\r\n            <p className='medium'><i className='fas fa-user'></i> Let's get some information to make your profile stand out</p>\r\n            <div style={{ marginTop: '10px' }}>* = required fields</div>\r\n\r\n            <form onSubmit={createProfileHandler}>\r\n                <div>\r\n                    {formArray.map(i => {\r\n                        return <Input\r\n                            key={i.id}\r\n                            invalid={!i.config.valid}\r\n                            touched={i.config.touched}\r\n                            elementType={i.config.elementType}\r\n                            elementConfig={i.config.elementConfig}\r\n                            changed={onChangeHandler.bind(this, i.id, i.config.validation)}\r\n                            value={i.config.value}\r\n                            info={i.config.info}\r\n                            icon={i.config.icon}\r\n                        />\r\n                    })}\r\n                </div>\r\n                {props.alertMsg ? <p className='alert alert-dark'>{props.alertMsg}</p> : null}\r\n                <div>\r\n                    <input type='submit' disabled={!isFormValid} className={CreateProfileButtonClasses.join(' ')} />\r\n                    <Link to='/profiles' className='btn btn-dark'> Go Back </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        alertMsg: state.alert.msg\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { createProfile })(withRouter(CreateProfile))","import { Fragment, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport useForm from '../../../hooks/useForm'\r\nimport Input from '../../UIElements/Input'\r\nimport { createProfile, currentProfile } from '../../../store/actions'\r\nimport Spinner from '../../UIElements/Spinner'\r\n\r\nconst EditProfile = ({ history, loading, createProfile, profile, alertMsg, currentProfile }) => {\r\n\r\n    //param1 = name, param2 = validation, param3= info/subscript  | returns form, overall validity, onChangeHandler\r\n    //for dropdown inputs please provide options also (first one being placeholder)\r\n    const statusOptions = ['* Select Professional Status', 'Developer', 'Junior Developer', 'Senior Developer', 'Manager', 'Student or Learning', 'Instructor', 'Intern', 'Other']\r\n\r\n    const [formData, isFormValid, onChangeHandler] = useForm([\r\n        { name: 'status', validation: { required: true }, info: 'Give us an idea of where you are at in your career', options: statusOptions },\r\n        { name: 'company', info: 'Could be your own company or one you work for' },\r\n        { name: 'website', info: 'Could be your own or a company website' },\r\n        { name: 'location', info: 'City & state suggested (eg. Boston, MA)' },\r\n        { name: 'skills', validation: { required: true }, info: 'Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)' },\r\n        { name: 'githubusername', info: 'If you want your latest repos and a Github link, include your username' },\r\n        { name: 'bio', info: 'Tell us a little about yourself' },\r\n        { name: 'twitter' },\r\n        { name: 'facebook' },\r\n        { name: 'youtube' },\r\n        { name: 'linkedIn' },\r\n        { name: 'instagram' }\r\n    ])\r\n\r\n    //cant do optional stuff inside hook because we are not managing the field via state. \r\n    //we have custom dynamic JS object field for each input field, manage state here itself for optional cases.\r\n\r\n    //filling existing profile data. (Like componentDidMount) if we write without useEffect, the existing values\r\n    //wont be change-able since we are always setting them up from db on each render cycle. To do it once, useEffect is key.\r\n    useEffect(() => {\r\n        currentProfile()\r\n        if (!loading && profile) {\r\n            for (let key in formData) {\r\n                for (let profileItem in profile) {\r\n                    if (formData[key].id === profileItem) formData[key].config.value = profile[profileItem]\r\n                    if (formData[key].id === 'skills' && profileItem === 'skills') formData[key].config.value = profile[profileItem].join(', ')\r\n                }\r\n                for (let profileItem in profile.social) {\r\n                    if (profileItem === formData[key].id) formData[key].config.value = profile.social[profileItem]\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    const editProfileHandler = () => {\r\n        event.preventDefault();\r\n\r\n        //converting formData to the form we expect at the backend {status: '', company: '', ...}\r\n        let userFormData = {}\r\n        for (let userInputIdentifier in formData) {\r\n            let name = formData[userInputIdentifier].id\r\n            userFormData[name] = formData[userInputIdentifier].config.value\r\n        }\r\n        createProfile(userFormData, history, true)\r\n    }\r\n\r\n    //converting object format to an array to loop through and map each one to an input field\r\n    const formArray = []\r\n    for (let key in formData) {\r\n        formArray.push(formData[key])\r\n    }\r\n\r\n    loading && <Spinner />\r\n\r\n    // let editProfileButtonClasses = ['btn', 'btn-large', 'btn-primary']\r\n    // if (!isFormValid) {\r\n    //     editProfileButtonClasses.push('btn-disabled')\r\n    // }\r\n\r\n    return <Fragment>\r\n        <div className='container'>\r\n            <h1 className='large primary-color'>Edit Your Profile</h1>\r\n            <div style={{ marginTop: '10px' }}>* = required fields</div>\r\n\r\n            <form onSubmit={editProfileHandler}>\r\n                <div>\r\n                    {formArray.map(i => {\r\n                        return <Input\r\n                            key={i.id}\r\n                            invalid={!i.config.valid}\r\n                            touched={i.config.touched}\r\n                            elementType={i.config.elementType}\r\n                            elementConfig={i.config.elementConfig}\r\n                            changed={onChangeHandler.bind(this, i.id, i.config.validation)}\r\n                            value={i.config.value}\r\n                            info={i.config.info}\r\n                            icon={i.config.icon}\r\n                        />\r\n                    })}\r\n                </div>\r\n                {alertMsg ? <p className='alert alert-dark'>{alertMsg}</p> : null}\r\n                <div>\r\n                    <input type='submit' className='btn btn-large btn-primary' />\r\n                    <Link to='/profiles' className='btn btn-dark'> Go Back </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.profile.loading,\r\n        profile: state.profile.profile,\r\n        alertMsg: state.alert.msg\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { createProfile, currentProfile })(withRouter(EditProfile))","import { Fragment } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport useForm from '../../../hooks/useForm'\r\nimport Input from '../../UIElements/Input'\r\nimport { addExperience } from '../../../store/actions'\r\n\r\nconst AddExperience = props => {\r\n\r\n    //accepted parameters = name, validation, info, options, checkbox \r\n    //for dropdown inputs please provide options also\r\n    //for checkboxes, pass along a checkbox property with the initial value\r\n\r\n    //returns form object, overall validity, onChangeHandler    \r\n    const [formData, isFormValid, onChangeHandler] = useForm([\r\n        { name: 'title', validation: { required: true } },\r\n        { name: 'company', validation: { required: true } },\r\n        { name: 'location' },\r\n        { name: 'from', validation: { required: true }, info: 'From Date' },\r\n        { name: 'current', checkbox: false, info: 'Current Job' },\r\n        { name: 'to', info: 'To Date' },\r\n        { name: 'description' }\r\n    ])\r\n\r\n    const AddExperienceHandler = () => {\r\n        event.preventDefault();\r\n\r\n        //converting formData to the form we expect at the backend {status: '', company: '', ...}\r\n        let userFormData = {}\r\n        for (let userInputIdentifier in formData) {\r\n            let name = formData[userInputIdentifier].id\r\n            userFormData[name] = formData[userInputIdentifier].config.value\r\n            if (name === 'current') userFormData[name] = formData[userInputIdentifier].config.checked\r\n        }\r\n        console.log(userFormData)\r\n        props.ADD_EXPERIENCE(userFormData, props.history)\r\n    }\r\n\r\n    //converting object format to an array to loop through and map each one to an input field\r\n    const formArray = []\r\n    for (let key in formData) {\r\n        formArray.push(formData[key])\r\n    }\r\n\r\n    //popping the todate field if currentjob is checked...(took 3 hours. Was earlier trying to disable the field but couldnt, instead popping it is elegant and easier)\r\n    for (let key in formData) {\r\n        if (formData[key].id === 'current') {\r\n            if (formData[key].config.checked) {\r\n                const index = formArray.findIndex(element => element.id === 'to')\r\n                formArray.splice(index, 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    let AddExperienceButtonClasses = ['btn', 'btn-large', 'btn-primary']\r\n    if (!isFormValid) {\r\n        AddExperienceButtonClasses.push('btn-disabled')\r\n    }\r\n\r\n    return <Fragment>\r\n        <div className='container'>\r\n            <h1 className='large primary-color'>Add an Experience</h1>\r\n            <p className='medium'><i className='fas fa-code-branch'></i> Add any developer/programming positions that you have had in the past</p>\r\n            <div style={{ marginTop: '10px' }}>* = required fields</div>\r\n\r\n            <form onSubmit={AddExperienceHandler}>\r\n                <div>\r\n                    {formArray.map(i => {\r\n                        return <Input\r\n                            key={i.id}\r\n                            invalid={!i.config.valid}\r\n                            touched={i.config.touched}\r\n                            elementType={i.config.elementType}\r\n                            elementConfig={i.config.elementConfig}\r\n                            changed={onChangeHandler.bind(this, i.id, i.config.validation)}\r\n                            value={i.config.value}\r\n                            info={i.config.info}\r\n                            icon={i.config.icon}\r\n                            checked={i.config.checked}\r\n                        />\r\n                    })}\r\n                </div>\r\n                {props.alertMsg ? <p className='alert alert-dark'>{props.alertMsg}</p> : null}\r\n                <div>\r\n                    <input type='submit' disabled={!isFormValid} className={AddExperienceButtonClasses.join(' ')} />\r\n                    <Link to='/profiles' className='btn btn-dark'> Go Back </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        alertMsg: state.alert.msg\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ADD_EXPERIENCE: (formData, history) => dispatch(addExperience(formData, history))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AddExperience))","import { Fragment } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport useForm from '../../../hooks/useForm'\r\nimport Input from '../../UIElements/Input'\r\nimport { addEducation } from '../../../store/actions'\r\n\r\nconst AddEducation = props => {\r\n\r\n    //accepted parameters = name, validation, info, options, checkbox \r\n    //for dropdown inputs please provide options also\r\n    //for checkboxes, pass along a checkbox property with the initial value\r\n\r\n    //returns form object, overall validity, onChangeHandler    \r\n    const [formData, isFormValid, onChangeHandler] = useForm([\r\n        { name: 'school', validation: { required: true } },\r\n        { name: 'degree', validation: { required: true } },\r\n        { name: 'fieldOfStudy', validation: { required: true } },\r\n        { name: 'from', info: 'From Date', validation: { required: true } },\r\n        { name: 'current', checkbox: false, info: 'Current School or Bootcamp' },\r\n        { name: 'to', info: 'To Date' },\r\n        { name: 'description' }\r\n    ])\r\n\r\n    const addEducationHandler = () => {\r\n        event.preventDefault();\r\n\r\n        //converting formData to the form we expect at the backend {status: '', company: '', ...}\r\n        let userFormData = {}\r\n        for (let userInputIdentifier in formData) {\r\n            let name = formData[userInputIdentifier].id\r\n            userFormData[name] = formData[userInputIdentifier].config.value\r\n\r\n            if (name === 'current') userFormData[name] = formData[userInputIdentifier].config.checked\r\n        }\r\n        //console.log(userFormData)\r\n        props.ADD_EDUCATION(userFormData, props.history)\r\n    }\r\n\r\n    //converting object format to an array to loop through and map each one to an input field\r\n    const formArray = []\r\n    for (let key in formData) {\r\n        formArray.push(formData[key])\r\n    }\r\n\r\n    //popping the todate field if currentjob is checked...(took 3 hours. Was earlier trying to disable the field but couldnt, instead popping it is elegant and easier)\r\n    for (let key in formData) {\r\n        if (formData[key].id === 'current') {\r\n            if (formData[key].config.checked) {\r\n                const index = formArray.findIndex(element => element.id === 'to')\r\n                formArray.splice(index, 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    let addEducationButtonClasses = ['btn', 'btn-large', 'btn-primary']\r\n    if (!isFormValid) {\r\n        addEducationButtonClasses.push('btn-disabled')\r\n    }\r\n\r\n    return <Fragment>\r\n        <div className='container'>\r\n            <h1 className='large primary-color'>Add an Education</h1>\r\n            <p className='medium'><i className='fas fa-graduation-cap'></i> Add any school, bootcamp, etc that you have attended</p>\r\n            <div style={{ marginTop: '10px' }}>* = required fields</div>\r\n\r\n            <form onSubmit={addEducationHandler}>\r\n                <div>\r\n                    {formArray.map(i => {\r\n                        return <Input\r\n                            key={i.id}\r\n                            invalid={!i.config.valid}\r\n                            touched={i.config.touched}\r\n                            elementType={i.config.elementType}\r\n                            elementConfig={i.config.elementConfig}\r\n                            changed={onChangeHandler.bind(this, i.id, i.config.validation)}\r\n                            value={i.config.value}\r\n                            info={i.config.info}\r\n                            icon={i.config.icon}\r\n                            checked={i.config.checked}\r\n                        />\r\n                    })}\r\n                </div>\r\n                {props.alertMsg ? <p className='alert alert-dark'>{props.alertMsg}</p> : null}\r\n                <div>\r\n                    <input type='submit' disabled={!isFormValid} className={addEducationButtonClasses.join(' ')} />\r\n                    <Link to='/profiles' className='btn btn-dark'> Go Back </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        alertMsg: state.alert.msg\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ADD_EDUCATION: (formData, history) => dispatch(addEducation(formData, history))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AddEducation))","import { Fragment } from 'react'\r\n\r\nconst ProfileTop = props => {\r\n\r\n    //storing user's social media links in an array\r\n    let socialLinksArray = []\r\n    if (props.profile) for (let key in props.profile.social) {\r\n        socialLinksArray.push({ type: key, url: props.profile.social[key] })\r\n    }\r\n\r\n    //displaying social media icons using array and user's website\r\n    let displaySocialLinks = socialLinksArray.length === 0 ? null : socialLinksArray.map(social => {\r\n        return <a href={social.url} target='_blank' key={social.type}><i className={`fab fa-${social.type} fa-2x`}></i>{social.type === 'linkedIn' && <i className=\"fab fa-linkedin fa-2x\"></i>}</a>\r\n    })\r\n    let website = props.profile && props.profile.website ? <a href={props.profile.website} target='_blank'><i className={`fas fa-globe fa-2x`}></i></a> : null\r\n\r\n    const dummyGravatar = 'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200'\r\n\r\n    return <Fragment>\r\n        <img src={props.profile.user.avatar ? props.profile.user.avatar : dummyGravatar} alt='Poor internet, cant load image' />\r\n        <p style={{fontSize: '2.6rem', fontWeight: 'bold', marginBottom: '5px'}}>{props.profile.user.name}</p>\r\n        <p className='medium' style={{marginBottom: '5px'}} >{props.profile.status} {props.profile.company && <span>at {props.profile.company}</span>}</p>\r\n        <p className='small'>{props.profile.location}</p>\r\n        <div className='profile-top-icons'>\r\n            {website}\r\n            {displaySocialLinks}\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nexport default ProfileTop","import { Fragment } from 'react'\r\n\r\nconst ProfileAbout = props => {\r\n    return <Fragment>\r\n        {/* Displaying Bio */}\r\n        <div>\r\n            <h2>{props.profile.user.name}'s Bio</h2>\r\n            <p className='small'>{props.profile.bio ? props.profile.bio : <span>No Bio entered by user !!!</span>}</p>\r\n        </div>\r\n\r\n        {/* Separator Line */}\r\n        <div className='line'></div>\r\n\r\n        {/* Displaying Skills */}\r\n        <div>\r\n            <h2 style={{marginBottom: '1rem'}}>Skill Set</h2>\r\n            {props.profile.skills.length !== 0 && props.profile.skills.map(skill => {\r\n                return <span key={skill} style={{paddingLeft: '4rem'}}><i className='fa fa-check'></i> {skill}</span>\r\n            })}\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nexport default ProfileAbout","import { Fragment } from 'react'\r\n\r\nimport formatDate from '../../../utility/formatDate'\r\n\r\nconst ProfileExperience = ({ experience }) => {\r\n    return <Fragment>\r\n        {experience && <Fragment>\r\n            <h2 className='primary-color' style={{marginBottom: '1rem'}}>Experience</h2>\r\n\r\n            {experience.map(exp => {\r\n                return <div key={exp._id}>\r\n                    <h3 className='my-bottom'>{exp.company}</h3>\r\n                    <p className='my-bottom'>{formatDate(exp.from)} - {exp.current ? <span>Current</span> : exp.to ? <span>{formatDate(exp.to)}</span> : <span>Unknown</span>}</p>\r\n                    <p className='my-bottom'><strong>Position : </strong>{exp.title}</p>\r\n                    {exp.description && <p  className='my-bottom-1'><strong>Description : </strong>{exp.description}</p>}\r\n                </div>\r\n            })}\r\n        </Fragment>}\r\n    </Fragment>\r\n}\r\n\r\nexport default ProfileExperience","import { Fragment } from 'react'\r\n\r\nimport formatDate from '../../../utility/formatDate'\r\n\r\nconst ProfileEducation = ({ education }) => {\r\n    return <Fragment>\r\n        {education && <Fragment>\r\n            <h2 className='primary-color' style={{marginBottom: '1rem'}}>Education</h2>\r\n\r\n            {education.map(edu => {\r\n                return <div key={edu._id}>\r\n                    <h3 className='my-bottom'>{edu.school}</h3>\r\n                    <p className='my-bottom'>{formatDate(edu.from)} - {edu.current ? <span>Current</span> : edu.to ? <span>{formatDate(edu.to)}</span> : <span>Unknown</span>}</p>\r\n                    <p className='my-bottom'><strong>Degree : </strong>{edu.degree}</p>\r\n                    <p className='my-bottom'><strong>Field Of Study : </strong>{edu.fieldOfStudy}</p>\r\n                    {edu.description && <p  className='my-bottom-1'><strong>Description : </strong>{edu.description}</p>}\r\n                </div>\r\n            })}\r\n        </Fragment>}\r\n    </Fragment>\r\n}\r\n\r\nexport default ProfileEducation","import { Fragment, useEffect, useCallback, useMemo } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { getGithubRepos } from '../../../store/actions'\r\n\r\nconst ProfileRepos = ({ username, repos, getGithubRepos, loading }) => {\r\n\r\n    useEffect(() => {\r\n        getGithubRepos(username)\r\n    }, [])\r\n\r\n    return <Fragment>\r\n        <h1 className='primary-color my-bottom-1'>GitHub Repositories</h1>\r\n\r\n        {!loading && repos.length === 0 ? <h3>No Github Repos to show</h3> : <Fragment>\r\n            {!loading && repos.length !== 0 ? repos.map(repo => {\r\n                return <div key={repo.id} className='repo'>\r\n                    <div>\r\n                        <a href={repo.html_url} target='_blank' style={{color: 'black'}}>\r\n                            <h3 className='my-bottom'>{repo.name}</h3>\r\n                        </a>\r\n                        <p>{repo.description}</p>\r\n                    </div>\r\n\r\n                    <div className='my-bottom-1'>\r\n                        <ul>\r\n                            <li className=\"badge badge-primary\">\r\n                                Stars: {repo.stargazers_count}\r\n                            </li>\r\n                            <li className=\"badge badge-dark\">\r\n                                Watchers: {repo.watchers_count}\r\n                            </li>\r\n                            <li className=\"badge badge-white\">\r\n                                Forks: {repo.forks_count}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            }) : null}\r\n        </Fragment>}\r\n\r\n    </Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.profile.loading,\r\n        repos: state.profile.repos\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileRepos)\r\n","import { Fragment, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport Spinner from '../../UIElements/Spinner'\r\nimport { getProfileBUserId } from '../../../store/actions'\r\nimport { getGithubRepos } from '../../../store/actions'\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileExperience from './ProfileExperience'\r\nimport ProfileEducation from './ProfileEducation'\r\nimport ProfileRepos from './ProfileRepos'\r\n\r\nconst DetailedProfile = props => {\r\n\r\n    //fetching profile from database\r\n    useEffect(() => {\r\n        props.getProfileBUserId(props.match.params.userId)\r\n    }, [])\r\n\r\n    !props.loading && console.log(props.profile)\r\n\r\n    // showing edit functionality to the user if the profile is of the logged in user itself\r\n    let editProfileButton = null\r\n    if (!props.loading && props.profile && props.auth.isAuth) {\r\n        if (props.auth.user._id === props.profile.user._id) {\r\n            editProfileButton = <button className='btn btn-light btn-large' onClick={() => props.history.push('/edit-profile')}>Edit Profile</button>\r\n        }\r\n    }\r\n\r\n    //rendering either profile or spinner\r\n    let profile = <Spinner />\r\n    if (props.profile) profile = (\r\n        <Fragment>\r\n            <div className='container'>\r\n                <button className='btn btn-light btn-large' onClick={() => props.history.goBack()}>Go Back</button>\r\n                {editProfileButton}\r\n\r\n                <div className='profile-grid'>\r\n                    <div className='profile-top'>\r\n                        <ProfileTop profile={props.profile} />\r\n                    </div>\r\n                    <div className='profile-about'>\r\n                        <ProfileAbout profile={props.profile} />\r\n                    </div>\r\n                    <div className='profile-exp'>\r\n                        <ProfileExperience experience={props.profile.experience} />\r\n                    </div>\r\n                    <div className='profile-edu'>\r\n                        <ProfileEducation education={props.profile.education} />\r\n                    </div>\r\n                    <div className='profile-github'>\r\n                        <ProfileRepos username={props.profile.githubUsername} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n    return profile\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.profile.loading,\r\n        profile: state.profile.profile,\r\n        repos: state.profile.repos,\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getProfileBUserId, getGithubRepos })(withRouter(DetailedProfile))","import { Fragment, useEffect } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport PrivateRoute from './components/routing/PrivateRoute'\nimport Navbar from './components/layout/Navbar'\nimport Lander from './components/layout/Lander'\nimport Dashboard from './components/dashboard/Dashboard'\nimport Login from './components/auth/Login'\nimport Register from './components/auth/Register'\nimport Developers from './components/Developers/Developers'\nimport Posts from './components/posts/Posts'\nimport PostDiscussion from './components/posts/PostDiscussion'\nimport Logout from './components/auth/Logout'\nimport CreateProfile from './components/dashboard/profiles/CreateProfile'\nimport EditProfile from './components/dashboard/profiles/EditProfile'\nimport AddExperience from './components/dashboard/profiles/AddExperience'\nimport AddEducation from './components/dashboard/profiles/AddEducation'\nimport DetailedProfile from './components/Developers/DetailedProfile/DetailedProfile'\nimport { loadUser } from './store/actions'\n\nimport './App.css';\n\nconst App = props => {\n\n  useEffect(() => {\n    props.LOAD_USER()\n  }, [])\n\n  const routes = (\n    <Switch>\n      <Route path='/register' exact component={Register} />\n      <Route path='/login' exact component={Login} />\n      <Route path='/developers' exact component={Developers} />\n      <Route path='/user/:userId' exact component={DetailedProfile} />\n      <PrivateRoute path='/logout' exact component={Logout} />\n      <PrivateRoute path='/posts' exact component={Posts} />\n      <PrivateRoute path='/posts/:id' exact component={PostDiscussion} />\n      <PrivateRoute path='/dashboard' exact component={Dashboard} />\n      <PrivateRoute path='/create-profile' exact component={CreateProfile} />\n      <PrivateRoute path='/edit-profile' exact component={EditProfile} />\n      <PrivateRoute path='/add-experience' exact component={AddExperience} />\n      <PrivateRoute path='/add-education' exact component={AddEducation} />\n      <Route path='/' exact component={Lander} />\n      <Redirect to='/' />\n    </Switch>\n  )\n\n  return (\n    <Router>\n      <Fragment>\n        <Navbar />\n        {routes}\n      </Fragment>\n    </Router>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LOAD_USER: () => dispatch(loadUser())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\n//reducers\nimport AlertReducer from './store/reducers/alert'\nimport AuthReducer from './store/reducers/auth'\nimport ProfileReducer from './store/reducers/profile'\nimport PostReducer from './store/reducers/post'\n\nimport App from './App';\n\nconst rootReducer = combineReducers({\n  alert: AlertReducer,\n  auth: AuthReducer,\n  profile: ProfileReducer,\n  post: PostReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}